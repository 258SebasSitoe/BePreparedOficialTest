// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Province{
  id String @id @default(uuid())
  designation String 
  createdAt DateTime @default(now()) @map("created_at")
  updatetedAt DateTime @updatedAt @map("updated_at")
  districts District[]
  subscriber Subscriber[]
  alerts alert[]

  @@map("provinces")
}
model District{
  id String @id @default(uuid())
  designation String 
  provinceId String @map("provinceId")
  createdAt DateTime @default(now()) @map("created_at")
  updatetedAt DateTime @updatedAt @map("updated_at")
  province Province @relation(fields: [provinceId], references: [id])
  subscribers Subscriber[]
  alerts alert[]
  
  @@map("districts")
}

model Subscriber{
  id String @id @default(uuid())
  phone String @unique @db.VarChar(9)
  deviceId String? @unique @map("device_Id")
  verified Boolean @default(false)
  districtId String @map("districtId")
  provinceId String @map("provinceId")
  createdAt DateTime @default(now()) @map("created_at")
  updatetedAt DateTime @updatedAt @map("updated_at")
  district District @relation(fields: [districtId], references: [id])
  province Province @relation(fields:[provinceId], references: [id])
  notification Notification[]

  @@map("subscribers")
}

model Notification{
  id String @id @default(uuid())
  SubscriberId String @map("subscriber_Id")
  message String
  createdAt DateTime @default(now()) @map("created_at")
  updatetedAt DateTime @updatedAt @map("updated_at")
  subscriber Subscriber @relation(fields: [SubscriberId], references: [id])

  @@map("notifications")
}

model admin{
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  districtId String?
  provinceId String?
  createdAt DateTime @default(now()) @map("created_at")
  updatetedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")
}

model alert{
  id String @id @default(uuid())
  title String
  message String
  districtId String @map("districtId")
  provinceId String @map("provinceId")
  createdAt DateTime @default(now()) @map("created_at")
  updatetedAt DateTime @updatedAt @map("updated_at")
  district District @relation(fields: [districtId], references: [id])
  province Province @relation(fields:[provinceId], references: [id])

  @@map("alerts")
}